/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../contracts/MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IProtocolToken",
        name: "_mainToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wethPerSecond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "contract IYieldBooster",
        name: "_boost",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWETH",
        type: "uint256",
      },
    ],
    name: "ClaimRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPointsWETH",
        type: "uint256",
      },
    ],
    name: "PoolSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserveWETH",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "emergencyUnlock",
        type: "bool",
      },
    ],
    name: "SetEmergencyUnlock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousYieldBooster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newYieldBooster",
        type: "address",
      },
    ],
    name: "SetYieldBooster",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "WethRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    name: "WethUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activePoolsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INFTPool",
        name: "nftPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPointsWETH",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addUnlockOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountWETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnlock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emissionRates",
    outputs: [
      {
        internalType: "uint256",
        name: "mainRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wethRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getActivePoolAddressByIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPoolAddressByIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPointsWETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveWETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolEmissionRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolEmissionRateWETH",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isUnlockOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeUnlockOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPointsWETH",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "emergencyUnlock_",
        type: "bool",
      },
    ],
    name: "setEmergencyUnlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wethRate",
        type: "uint256",
      },
    ],
    name: "setWethRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IYieldBooster",
        name: "yieldBooster_",
        type: "address",
      },
    ],
    name: "setYieldBooster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPointsWETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftPool",
        type: "address",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wethPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBooster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aeb38038062001aeb8339810160408190526200003491620001b0565b6200003f33620000d5565b600280546001600160a01b03199081166001600160a01b03898116919091179092556003805482168784161790556001805482168884161790556008859055600784905560048054909116918316919091179055620000ac600e8662000125602090811b62000e0817901c565b50620000c833600e6200012560201b62000e081790919060201c565b505050505050506200022d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200013c836001600160a01b03841662000145565b90505b92915050565b60008181526001830160205260408120546200018e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200013f565b5060006200013f565b6001600160a01b0381168114620001ad57600080fd5b50565b60008060008060008060c08789031215620001ca57600080fd5b8651620001d78162000197565b6020880151909650620001ea8162000197565b6040880151909550620001fd8162000197565b80945050606087015192506080870151915060a08701516200021f8162000197565b809150509295509295509295565b6118ae806200023d6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806379951f0c1161010f578063a2a4284b116100a2578063e4a7631511610071578063e4a763151461042e578063f2c3999214610441578063f2fde38b14610455578063f501d10c1461046857600080fd5b8063a2a4284b146103ec578063a52a6b19146103ff578063ad5c464814610412578063aeccb3f11461042557600080fd5b80638da5cb5b116100de5780638da5cb5b146103b757806393a037cc146103c8578063a1135db7146103d0578063a12f5551146103d957600080fd5b806379951f0c1461036b5780637b46c54f1461037e5780637f51bb1f1461039157806389476069146103a457600080fd5b80634b57b0be1161018757806368e5dab51161015657806368e5dab5146103265780636f8297af14610337578063715018a61461035a57806378e979251461036257600080fd5b80634b57b0be146102e75780635d24058c146102f857806361d027b31461030b578063630b5ba11461031e57600080fd5b80632716ae66116101c35780632716ae66146102a55780632f38e042146102ad578063372500ab146102c257806345847365146102df57600080fd5b806306bfa938146101f557806317967183146102525780631a465fe11461027d5780631fa36cbe1461028e575b600080fd5b61020861020336600461164d565b61047b565b604080516001600160a01b0390991689526020890197909752958701949094526060860192909252608085015260a084015260c083015260e0820152610100015b60405180910390f35b61026561026036600461166a565b610552565b6040516001600160a01b039091168152602001610249565b6002546001600160a01b0316610265565b61029760055481565b604051908152602001610249565b61029761057d565b6102c06102bb366004611691565b61058e565b005b6102ca6105f2565b60408051928352602083019190915201610249565b6102976106cd565b6003546001600160a01b0316610265565b6102c06103063660046116ae565b6106d9565b600154610265906001600160a01b031681565b6102c061083f565b6004546001600160a01b0316610265565b61034a61034536600461164d565b610849565b6040519015158152602001610249565b6102c061086c565b61029760075481565b6102c061037936600461164d565b61087e565b6102c061038c36600461164d565b610895565b6102c061039f36600461164d565b6108c7565b6102c06103b236600461164d565b61098e565b6000546001600160a01b0316610265565b6102ca610a63565b61029760085481565b6102c06103e736600461164d565b610ae8565b6102c06103fa36600461164d565b610afb565b6102c061040d36600461166a565b610bd9565b600354610265906001600160a01b031681565b61029760065481565b6102c061043c3660046116ae565b610c16565b60005461034a90600160a01b900460ff1681565b6102c061046336600461164d565b610d6a565b61026561047636600461166a565b610de3565b6001600160a01b0381166000908152600960209081526040808320815160a081018352815480825260018301549482018590526002830154938201849052600383015460608301819052600490930154608083018190526005548897929695949391929182911580156104ee5750600654155b15610500576000925060009150610546565b60008061050b610a63565b600554919350915061051d8b8461170e565b610527919061172d565b6006549095506105378a8361170e565b610541919061172d565b935050505b50919395975091939597565b600061055e600a610e24565b821061056c57506000919050565b610577600a83610e2e565b92915050565b6000610589600a610e24565b905090565b610596610e3a565b6000805460ff60a01b1916600160a01b8315158102919091179182905560405160ff9190920416151581527f1545be19b3ba6f2e76454d1b8b59529cbbbdf7af9046fd49bd86c17314a5509d906020015b60405180910390a150565b600080610600600a33610e94565b61060d5750600091829150565b61061633610eb6565b50503360009081526009602052604090206003810154600482015490918215801561063f575081155b1561064f57506000928392509050565b6000600382018190556004820155604080518481526020810184905233917f674a8930d4166ce2352c3dc1e9ff633595db479f71f3741270a0a73a52cb7b0f910160405180910390a26002546106af906001600160a01b031633856110d7565b506003546106c7906001600160a01b031633846110d7565b50509091565b6000610589600c610e24565b836106e5600a82610e94565b610702576040516302ea63c760e21b815260040160405180910390fd5b61070a610e3a565b6001600160a01b03851660009081526009602052604090208054600182015484156107375761073761116f565b61074088610eb6565b86835560018301869055600554879061075a90849061174f565b6107649190611766565b600555600654869061077790839061174f565b6107819190611766565b600655811580156107925750600087115b806107a65750801580156107a65750600086115b156107bc576107b6600c89610e08565b506107f1565b6000821180156107ca575086155b80156107df57506000811180156107df575085155b156107f1576107ef600c896111ab565b505b60408051888152602081018890526001600160a01b038a16917fea29fe89a87fa3313f2a2660ae50c64e4b4993a7cd15a28cc57dd2910e998254910160405180910390a25050505050505050565b61084761116f565b565b600080546001600160a01b03838116911614806105775750610577600e83610e94565b610874610e3a565b61084760006111c0565b610886610e3a565b610891600e826111ab565b5050565b806108a1600a82610e94565b6108be576040516302ea63c760e21b815260040160405180910390fd5b61089182610eb6565b6108cf610e3a565b6001600160a01b0381166109405760405162461bcd60e51b815260206004820152602d60248201527f75706461746554726561737572793a2063616e6e6f742062652073657420746f60448201526c207a65726f206164647265737360981b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1906020016105e7565b610996610e3a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a01919061177e565b600154909150610a1c9083906001600160a01b0316836110d7565b50604080516001600160a01b0384168152602081018390527f68577e4d693c1b056a60bc4e39438810239a0bfe64869c4eb7e3baebb5f65634910160405180910390a15050565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166339eb41896040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610add919061177e565b915060085490509091565b610af0610e3a565b610891600e82610e08565b610b03610e3a565b6001600160a01b038116610b705760405162461bcd60e51b815260206004820152602e60248201527f7365745969656c64426f6f737465723a2063616e6e6f7420626520736574207460448201526d6f207a65726f206164647265737360901b6064820152608401610937565b600454604080516001600160a01b03928316815291831660208301527f7318a5c0c2124d6236f6ff6c5970bd58080848fefd17871fb15b8ea976c08a10910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b610be1610e3a565b60088190556040518181527f576b8986bb23662f0c7952fa40b2a120745b6ea81e56f3c20a1a80c1dd75e8a7906020016105e7565b610c1e610e3a565b83610c2a600a82610e94565b15610c4857604051630188c99160e11b815260040160405180910390fd5b6000841180610c575750600083115b15610c77578115610c6a57610c6a61116f565b610c75600c82610e08565b505b60006007544211610c8a57600754610c8c565b425b90508460056000828254610ca09190611766565b925050819055508360066000828254610cb99190611766565b90915550610cca9050600a83610e08565b506040805160a0810182528681526020808201878152828401858152600060608501818152608086018281526001600160a01b038a168084526009875292889020965187559351600187015591516002860155905160038501559051600490930192909255915187815290917f0c98febfffcec480c66a977e13f14bafdb5199ea9603591a0715b0cabe0c3ae291015b60405180910390a2505050505050565b610d72610e3a565b6001600160a01b038116610dd75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610937565b610de0816111c0565b50565b6000610def600c610e24565b8210610dfd57506000919050565b610577600c83610e2e565b6000610e1d836001600160a01b038416611210565b9392505050565b6000610577825490565b6000610e1d838361125f565b6000546001600160a01b031633146108475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610937565b6001600160a01b03811660009081526001830160205260408120541515610e1d565b6001600160a01b038116600090815260096020526040902060028101544290808211610ee25750505050565b8254600184015481151580610ef75750600081115b8015610f605750856001600160a01b031663e61f927d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190611797565b1561107d57600080610f70610a63565b90925090506000610f81868861174f565b90506000600554868584610f95919061170e565b610f9f919061170e565b610fa9919061172d565b90506000600654868585610fbd919061170e565b610fc7919061170e565b610fd1919061172d565b600254604051637813570560e01b8152600481018590529192506001600160a01b0316906378135705906024016020604051808303816000875af115801561101d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611041919061177e565b9150818a60030160008282546110579190611766565b92505081905550808a60040160008282546110729190611766565b909155505050505050505b600285018490556003850154600486015460408051928352602083019190915281018590526001600160a01b038716907f6ee09c6cb801194690c195c69f465aaf7c80255cbeafaab9600f47ed79de2ca990606001610d5a565b6040516370a0823160e01b815230600482015260009081906001600160a01b038616906370a0823190602401602060405180830381865afa158015611120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611144919061177e565b905080831115611152578092505b6111666001600160a01b0386168585611289565b50909392505050565b600061117b600c610e24565b905060005b818110156108915761119b611196600c83610e2e565b610eb6565b6111a4816117b4565b9050611180565b6000610e1d836001600160a01b0384166112e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815260018301602052604081205461125757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610577565b506000610577565b6000826000018281548110611276576112766117cd565b9060005260206000200154905092915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526112db9084906113d3565b505050565b600081815260018301602052604081205480156113c957600061130460018361174f565b85549091506000906113189060019061174f565b905081811461137d576000866000018281548110611338576113386117cd565b906000526020600020015490508087600001848154811061135b5761135b6117cd565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061138e5761138e6117e3565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610577565b6000915050610577565b6000611428826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114a89092919063ffffffff16565b90508051600014806114495750808060200190518101906114499190611797565b6112db5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610937565b60606114b784846000856114bf565b949350505050565b6060824710156115205760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610937565b600080866001600160a01b0316858760405161153c9190611829565b60006040518083038185875af1925050503d8060008114611579576040519150601f19603f3d011682016040523d82523d6000602084013e61157e565b606091505b509150915061158f8783838761159a565b979650505050505050565b60608315611609578251600003611602576001600160a01b0385163b6116025760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610937565b50816114b7565b6114b7838381511561161e5781518083602001fd5b8060405162461bcd60e51b81526004016109379190611845565b6001600160a01b0381168114610de057600080fd5b60006020828403121561165f57600080fd5b8135610e1d81611638565b60006020828403121561167c57600080fd5b5035919050565b8015158114610de057600080fd5b6000602082840312156116a357600080fd5b8135610e1d81611683565b600080600080608085870312156116c457600080fd5b84356116cf81611638565b9350602085013592506040850135915060608501356116ed81611683565b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611728576117286116f8565b500290565b60008261174a57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611761576117616116f8565b500390565b60008219821115611779576117796116f8565b500190565b60006020828403121561179057600080fd5b5051919050565b6000602082840312156117a957600080fd5b8151610e1d81611683565b6000600182016117c6576117c66116f8565b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60005b838110156118145781810151838201526020016117fc565b83811115611823576000848401525b50505050565b6000825161183b8184602087016117f9565b9190910192915050565b60208152600082518060208401526118648160408501602087016117f9565b601f01601f1916919091016040019291505056fea26469706673582212206ce4ac8e81455258fc6357a39b5566e94b06c86d24d55a32c9a75ebe8c3fa5c164736f6c634300080f0033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mainToken: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _wethPerSecond: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    _boost: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _mainToken,
      _treasury,
      _weth,
      _wethPerSecond,
      _startTime,
      _boost,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  override getDeployTransaction(
    _mainToken: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _wethPerSecond: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    _boost: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mainToken,
      _treasury,
      _weth,
      _wethPerSecond,
      _startTime,
      _boost,
      overrides || {}
    );
  }
  override attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  override connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
